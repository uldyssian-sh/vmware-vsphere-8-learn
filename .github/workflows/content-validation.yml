name: Content Validation & Quality Check

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 3 * * 1'

jobs:
  validate-content:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install markdown tools
        run: |
          npm install -g markdownlint-cli
          npm install -g markdown-link-check
      
      - name: Validate Markdown
        run: |
          markdownlint modules/**/*.md docs/**/*.md || true
          find . -name "*.md" -not -path "./node_modules/*" | xargs markdown-link-check || true
      
      - name: Validate PowerShell Scripts
        run: |
          if [ -d "scripts" ]; then
            docker run --rm -v "$PWD:/workspace" mcr.microsoft.com/powershell:latest pwsh -Command "
              Get-ChildItem -Path /workspace -Recurse -Include '*.ps1' | ForEach-Object {
                try {
                  \$null = [System.Management.Automation.PSParser]::Tokenize((Get-Content \$_.FullName -Raw), [ref]\$null)
                  Write-Host '✓ Valid:' \$_.Name
                } catch {
                  Write-Host '✗ Invalid:' \$_.Name
                  Write-Host \$_.Exception.Message
                }
              }
            "
          fi
      
      - name: Check Learning Objectives
        run: |
          echo "Validating learning objectives structure..."
          find modules -name "*.md" | while read file; do
            if grep -q "## Learning Objectives" "$file"; then
              echo "✓ Learning objectives found in $file"
            else
              echo "⚠ Missing learning objectives in $file"
            fi
          done

  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'

  accessibility-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check accessibility
        run: |
          echo "Checking content accessibility..."
          find . -name "*.md" | while read file; do
            if grep -q "!\[.*\]" "$file"; then
              echo "✓ Images found in $file - ensure alt text is descriptive"
            fi
          done